{"version":3,"sources":["Pages/Index.js","UserContext.js","Pages/Cities.js","Pages/LogIn.js","Pages/LogOut.js","App.js","index.js"],"names":["Index","useState","city","setCity","temp","description","setInfo","useEffect","fetch","then","response","json","data","success","latitude","longitude","main","weather","id","UserContext","createContext","Cities","city_name","setCityName","favCities","setFavCities","useContext","isAuthed","setIsAuthed","localStorage","getItem","JSON","parse","handleSubmit","e","preventDefault","console","log","currentListOfCities","updateCitiesList","setItem","stringify","className","onSubmit","name","value","onChange","target","placeholder","onClick","map","idx","Card","key","removeCard","filter","index","removefavCity","to","props","setTemp","LogIn","history","useHistory","event","handleChange","type","push","LogOut","AppRouter","undefined","useMemo","Provider","path","exact","component","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.84366c93.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport function Index() {\r\n   const [city, setCity] = useState(null);\r\n   const [{ temp, description }, setInfo] = useState({ temp: null, description: null });\r\n\r\n   const API_key = \"c47a67513f793be01fd78b932ab39567\";\r\n\r\n   const getWeather = () => {\r\n      fetch(\"https://ipwhois.app/json/?lang=ru&objects=city,latitude,longitude,success\")\r\n         .then(response => response.json())\r\n         .then(data => {\r\n            if (data.success === true) {\r\n               setCity(data.city)\r\n               fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${data.latitude}&lon=${data.longitude}&appid=${API_key}&units=metric&lang=ru`)\r\n                  .then(response => response.json())\r\n                  .then(data => {\r\n                     if (data.main) {\r\n                        data.main.temp > 0\r\n                           ? setInfo({ temp: `+${data.main.temp}`, description: data.weather[0].description })\r\n                           : setInfo({ temp: `+${data.main.temp}`, description: data.weather[0].description });\r\n                     }\r\n                  });\r\n            }\r\n         })\r\n   }\r\n\r\n   useEffect(() => {\r\n      getWeather();\r\n   }, [])\r\n\r\n   return (\r\n      <div id=\"weather\">\r\n         {(city && temp) ?\r\n            (<div><p id=\"weather__title\">Текущая погода</p>\r\n               <p>{city}\r\n                  <span id=\"weather__description\">{temp} ({description})</span>\r\n               </p></div>)\r\n            : \"\"}\r\n      </div>\r\n   )\r\n}","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);","import React, { useState, useEffect, useContext } from \"react\";//{ useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Redirect } from 'react-router';\r\n\r\nconst API_key = \"c47a67513f793be01fd78b932ab39567\";\r\n\r\nexport function Cities() {\r\n   const [city_name, setCityName] = useState(\"\");\r\n   const [favCities, setFavCities] = useState([]);\r\n   const { isAuthed, setIsAuthed } = useContext(UserContext);\r\n\r\n   useEffect(() => {\r\n      //getCities from LocalStorage\r\n      localStorage.getItem('favCities') ? setFavCities(JSON.parse(localStorage.getItem('favCities'))) : setFavCities([]);\r\n   }, []);\r\n\r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n      console.log(city_name);\r\n      let currentListOfCities = [...favCities, city_name];\r\n      updateCitiesList(currentListOfCities);\r\n      setCityName(\"\");\r\n   }\r\n\r\n   const updateCitiesList = (currentListOfCities) => {\r\n      setFavCities(currentListOfCities);\r\n      localStorage.setItem('favCities', JSON.stringify(currentListOfCities));\r\n   }\r\n\r\n   const removefavCity = idx => {\r\n      let currentListOfCities = favCities.filter((value, index) => index !== idx);\r\n      updateCitiesList(currentListOfCities);\r\n   }\r\n\r\n   if (isAuthed === true) {\r\n      return (\r\n         <div id=\"grid_2-columns\">\r\n            <div className=\"left_column\">\r\n               <form onSubmit={handleSubmit} className=\"form\">\r\n                  <input\r\n                     className=\"form__input\"\r\n                     name=\"text\"\r\n                     value={city_name}\r\n                     onChange={e => setCityName(e.target.value)}\r\n                     placeholder=\"Введите название города...\"\r\n                  />\r\n                  <button onClick={handleSubmit}>Добавить</button>\r\n               </form>\r\n            </div>\r\n\r\n            <div>\r\n               {favCities.map((city, idx) => {\r\n                  return <Card city={city} key={`${city}${idx}`} removeCard={() => removefavCity(idx)} />\r\n               }\r\n               )}\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n   else {\r\n      return <Redirect to=\"/logIn\" />;\r\n   }\r\n}\r\n\r\nfunction Card(props) {\r\n   const [temp, setTemp] = useState(null);\r\n\r\n   useEffect(() => {\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=${API_key}&units=metric `)\r\n         .then(response => response.json())\r\n         .then(data => {\r\n            if (data.main) {\r\n               data.main.temp > 0 ? setTemp(`+${data.main.temp}`) : setTemp(`+${data.main.temp}`);\r\n            }\r\n            else {\r\n               setTemp(\"не найден\");\r\n            }\r\n         });\r\n\r\n   }, [])\r\n\r\n   return (\r\n      <div className=\"cityCard\">\r\n         <button className=\"cityCard__remove\" onClick={props.removeCard}>x</button>\r\n         <div className=\"cityCard__info\">\r\n            <span >{props.city}</span>\r\n            <span className=\"cityCard__temp\">{temp}</span>\r\n         </div>\r\n      </div >\r\n   )\r\n}","import React, { useContext } from \"react\";//{ useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nexport function LogIn() {\r\n\r\n   const { setIsAuthed } = useContext(UserContext);\r\n\r\n   const history = useHistory();\r\n\r\n   const signIn = () => {\r\n      localStorage.setItem('isAuthed', true);\r\n      setIsAuthed(true);\r\n      history.push(\"/cities\");\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <h2>Sign in</h2>\r\n         <form className=\"form\">\r\n            <input onChange={event => { this.handleChange(event, \"title\") }} value=\"user\"\r\n               className=\"form__input\" placeholder=\"Login\"></input>\r\n            <input onChange={event => { this.handleChange(event, \"title\") }} value=\"password1234\"\r\n               className=\"form__input\" type=\"password\" placeholder=\"Password\"></input>\r\n            <div className=\"form__submit-container\">\r\n               <button className=\"form__submit-button\" onClick={signIn}>\r\n                  Sign in\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div >\r\n   )\r\n}","import React, { useContext, useEffect } from \"react\";//{ useContext } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nexport function LogOut() {\r\n\r\n   const { setIsAuthed } = useContext(UserContext);\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem('isAuthed', false);\r\n      setIsAuthed(false);\r\n   }, []);\r\n\r\n   return <Redirect to=\"/\" />\r\n}","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Index } from \"./Pages/Index\";\r\nimport { Cities } from \"./Pages/Cities\";\r\nimport { LogIn } from \"./Pages/LogIn\";\r\nimport { LogOut } from \"./Pages/LogOut\";\r\nimport { UserContext } from \"./UserContext\";\r\n//HashRouter\r\n\r\nfunction AppRouter() {\r\n   const [isAuthed, setIsAuthed] = useState(null);\r\n\r\n   useEffect(() => {\r\n      //getCities from LocalStorage\r\n      localStorage.getItem('isAuthed') !== undefined\r\n         ? setIsAuthed(localStorage.getItem('isAuthed'))\r\n         : setIsAuthed(false);\r\n   }, []);\r\n\r\n   const value = useMemo(() => ({ isAuthed, setIsAuthed }), [isAuthed, setIsAuthed]);\r\n\r\n   return (\r\n      <Router>\r\n         <UserContext.Provider value={value} >\r\n            <div>\r\n               <nav className=\"nav\">\r\n                  <div className=\"container_nav\">\r\n                     <Link className=\"link\" to=\"/\">Home</Link>\r\n                     <Link className=\"link\" to=\"/cities\">Cities</Link>\r\n                     {isAuthed\r\n                        ? <Link className=\"link auth-link aside\" to=\"/logOut\">Sign Out</Link>\r\n                        : <Link className=\"link auth-link aside\" to=\"/logIn\">Sign In</Link>\r\n                     }\r\n                  </div>\r\n               </nav>\r\n            </div>\r\n            <div className=\"container__content\">\r\n               <Route path=\"/\" exact component={Index} />\r\n               <Route path=\"/cities\" component={Cities} />\r\n               <Route path=\"/logOut\" component={LogOut} />\r\n               <Route path=\"/logIn\" component={LogIn} />\r\n            </div>\r\n         </UserContext.Provider>\r\n      </Router >\r\n   )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}